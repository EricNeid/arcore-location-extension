def groupId = 'com.github.ericneid'
def libraryName = 'arcore-location-extension'
def libraryVersion = '0.8.0'

ext {
	PUBLISH_GROUP_ID = groupId
	PUBLISH_VERSION = libraryVersion
	PUBLISH_ARTIFACT_ID = libraryName
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: "${rootProject.projectDir}/scripts/publish-mavencentral.gradle"

android {
	compileSdkVersion rootProject.compileSdkVersion
	buildToolsVersion rootProject.buildToolsVersion

	defaultConfig {
		minSdkVersion project.minSdkVersion
		targetSdkVersion project.targetSdkVersion
		testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
	}

	buildTypes {
		release {
			minifyEnabled false
		}
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		test.java.srcDirs += 'src/test/kotlin'
		debug.java.srcDirs += 'src/debug/kotlin'
		release.java.srcDirs += 'src/release/kotlin'
	}

	compileOptions {
		sourceCompatibility = '1.8'
		targetCompatibility = '1.8'
	}

	testOptions {
		unitTests.returnDefaultValues = true
	}
}

group = groupId
version = libraryVersion
archivesBaseName = libraryName

repositories {
	google()
	jcenter()
	mavenCentral()
}

dependencies {
	// kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

	// ar core
	implementation "com.google.ar.sceneform:core:1.15.0"
	implementation "com.google.ar.sceneform.ux:sceneform-ux:1.15.0"

	// android support
	implementation 'androidx.annotation:annotation:1.1.0'

	// geodetic
	implementation 'org.gavaghan:geodesy:1.1.3'

	// testing
	// core library
	testImplementation 'androidx.test:core:1.2.0'
	testImplementation 'androidx.arch.core:core-testing:2.1.0'

	// androidJUnitRunner and JUnit Rules
	testImplementation 'androidx.test:runner:1.2.0'
	testImplementation 'androidx.test:rules:1.2.0'

	// assertions
	testImplementation 'androidx.test.ext:junit:1.1.1'

	// mockito
	testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
}

